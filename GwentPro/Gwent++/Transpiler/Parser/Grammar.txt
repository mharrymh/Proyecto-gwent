Pr := PDs
PDs := PD PDs
PD := E | C


E := effect { EPs }
EPs := EP , EPs ;
EP := N | P | Ac 
N := Name : *string*
P := Params : { Ds } | e
Ds := D, Ds 
D := *id* : TD
Ac := Action : ( targets , context) => { IB }


C := card { CPs }
CPs := CP , CPs ;
CP := N | T | F | PO | RB | AB
T := Type : *string*
F := Faction : *string*
PO := Power : ExN | e
RB := Range : [ *string* , STRINGS ]
AB := OnActivation : [ EList ]
EList := CE , EList ;
CE := { ECPs }
ECPs := ECP, ECPs ;
ECP := CED | S | PAc
CED := Effect : EB
EB := { EBPs } | *string*
EBPs := EBP , EBPs ;
EBP := N | Asignations
    S := Selector : { SPs }
    SPs := SP , SPs 
    SP := SO | SI | PR
    SO := Source : *string*
    SI := Single : ExB | e
    PR := Predicate : ExPr
PAc := PostAction : { PAcPs } | e
PAcPs := PAcP, PAcPs
PAcP := ECPs




Pr -> Program
PDs -> ProgramDeclarations
PD -> ProgramDeclaration
E -> effectDeclaration
EPs -> effectProperties
EP -> effectProperty
N -> NameField
P -> ParamsField
Ac -> ActionField
D -> Definition
TD -> TypeDeclaration
IB -> InstructionBlock
C -> CardDeclaration
CP -> CardProperty
T -> TypeField
F -> FactionField
PO -> Power
RB -> RangeBlock
AB -> ActivationBlock
EList -> CardEffectsList
CE -> CardEffect
ECPs -> CardEffectsProperties
CED -> CardEffectDeclaration
S -> Selector
PAc -> PostAction
EB -> EffectBlock
EBPs -> EffectBlockProperties
SP -> SelectorProp
SO -> Source
SI -> Single
PR -> Predicate
^IB -> InstructionBlock
^ExB -> BooleanExpression
^ExPr -> PredicativeExpression 
^ExN -> NumericExpression
PAcPs -> PostActionProperties